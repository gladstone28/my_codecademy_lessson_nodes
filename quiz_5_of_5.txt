Which of the following methods implemented in the Node class are required to establish a Node class with an accessible but immutable value?

class Node:
  def __init__(self, value, link_node=None):
       self.value = value
       self.link_node = link_node
  def get_value(self):
   return self.value
  def get_link_node(self):
   return self.link_node
  def set_link_node(self, link_node):
   self.link_node = link_node
  def set_value(self, value):
   self.value = value
  def increment_value(self):
    self.value = self.value + 1

.__init__(), .get_value(), .get_link_node(), .set_link_node(), and .increment_value()


.__init__(), .get_value(), .get_link_node(), .set_value() and .set_link_node()


.__init__(), .get_value(), .get_link_node(), and .set_link_node()


.__init__(), .get_link_node(), and .set_link_node()
